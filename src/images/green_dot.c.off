#ifdef __has_include
    #if __has_include("lvgl.h")
        #ifndef LV_LVGL_H_INCLUDE_SIMPLE
            #define LV_LVGL_H_INCLUDE_SIMPLE
        #endif
    #endif
#endif

#if defined(LV_LVGL_H_INCLUDE_SIMPLE)
    #include "lvgl.h"
#else
    #include "lvgl/lvgl.h"
#endif


#ifndef LV_ATTRIBUTE_MEM_ALIGN
#define LV_ATTRIBUTE_MEM_ALIGN
#endif

#ifndef LV_ATTRIBUTE_IMG_GREEN_DOT
#define LV_ATTRIBUTE_IMG_GREEN_DOT
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_GREEN_DOT uint8_t green_dot_map[] = {
#if LV_COLOR_DEPTH == 1 || LV_COLOR_DEPTH == 8
  /*Pixel format: Red: 3 bit, Green: 3 bit, Blue: 2 bit*/
  0xff, 0xff, 0xff, 0x95, 0x50, 0x50, 0x50, 0x95, 0xff, 0xff, 0xff, 
  0xff, 0xba, 0x50, 0x74, 0x74, 0x74, 0x74, 0x54, 0x50, 0xba, 0xff, 
  0xff, 0x50, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x50, 0xff, 
  0x95, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x54, 0x75, 
  0x50, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x50, 
  0x50, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x50, 
  0x50, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x50, 
  0x95, 0x54, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x54, 0x95, 
  0xff, 0x50, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x74, 0x50, 0xff, 
  0xff, 0xba, 0x50, 0x54, 0x74, 0x74, 0x74, 0x54, 0x50, 0xdb, 0xff, 
  0xff, 0xff, 0xff, 0x75, 0x50, 0x50, 0x50, 0x95, 0xff, 0xff, 0xff, 
#endif
#if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
  /*Pixel format: Red: 5 bit, Green: 6 bit, Blue: 5 bit*/
  0xff, 0xff, 0xff, 0xff, 0x5a, 0xdf, 0x2a, 0x75, 0x02, 0x3c, 0xc0, 0x33, 0x02, 0x3c, 0x2a, 0x75, 0x5a, 0xdf, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0x53, 0xae, 0xc0, 0x33, 0xc4, 0x54, 0x23, 0x5d, 0x43, 0x65, 0x23, 0x5d, 0xa3, 0x54, 0xc0, 0x33, 0x74, 0xb6, 0xff, 0xff, 
  0x5a, 0xdf, 0xc0, 0x33, 0xe2, 0x5c, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0xe2, 0x5c, 0xc0, 0x33, 0x5a, 0xdf, 
  0x2a, 0x75, 0xc4, 0x54, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0xa3, 0x54, 0x29, 0x75, 
  0x02, 0x3c, 0x23, 0x5d, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x23, 0x5d, 0x02, 0x3c, 
  0xc0, 0x33, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0xc0, 0x33, 
  0x02, 0x3c, 0x23, 0x5d, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x23, 0x5d, 0x02, 0x3c, 
  0x2a, 0x75, 0xa3, 0x54, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x82, 0x4c, 0x2a, 0x75, 
  0x5a, 0xdf, 0xc0, 0x33, 0xe2, 0x5c, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0xe2, 0x5c, 0xc0, 0x33, 0x5a, 0xdf, 
  0xff, 0xff, 0x74, 0xb6, 0xc0, 0x33, 0xa3, 0x54, 0x23, 0x5d, 0x43, 0x65, 0x23, 0x5d, 0x82, 0x4c, 0xc0, 0x33, 0x95, 0xbe, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0x5a, 0xdf, 0x29, 0x75, 0x02, 0x3c, 0xc0, 0x33, 0x02, 0x3c, 0x2a, 0x75, 0x5a, 0xdf, 0xff, 0xff, 0xff, 0xff, 
#endif
#if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP != 0
  /*Pixel format: Red: 5 bit, Green: 6 bit, Blue: 5 bit BUT the 2 bytes are swapped*/
  0xff, 0xff, 0xff, 0xff, 0xdf, 0x5a, 0x75, 0x2a, 0x3c, 0x02, 0x33, 0xc0, 0x3c, 0x02, 0x75, 0x2a, 0xdf, 0x5a, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xae, 0x53, 0x33, 0xc0, 0x54, 0xc4, 0x5d, 0x23, 0x65, 0x43, 0x5d, 0x23, 0x54, 0xa3, 0x33, 0xc0, 0xb6, 0x74, 0xff, 0xff, 
  0xdf, 0x5a, 0x33, 0xc0, 0x5c, 0xe2, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x5c, 0xe2, 0x33, 0xc0, 0xdf, 0x5a, 
  0x75, 0x2a, 0x54, 0xc4, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x54, 0xa3, 0x75, 0x29, 
  0x3c, 0x02, 0x5d, 0x23, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x5d, 0x23, 0x3c, 0x02, 
  0x33, 0xc0, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x33, 0xc0, 
  0x3c, 0x02, 0x5d, 0x23, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x5d, 0x23, 0x3c, 0x02, 
  0x75, 0x2a, 0x54, 0xa3, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x4c, 0x82, 0x75, 0x2a, 
  0xdf, 0x5a, 0x33, 0xc0, 0x5c, 0xe2, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x65, 0x43, 0x5c, 0xe2, 0x33, 0xc0, 0xdf, 0x5a, 
  0xff, 0xff, 0xb6, 0x74, 0x33, 0xc0, 0x54, 0xa3, 0x5d, 0x23, 0x65, 0x43, 0x5d, 0x23, 0x4c, 0x82, 0x33, 0xc0, 0xbe, 0x95, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xdf, 0x5a, 0x75, 0x29, 0x3c, 0x02, 0x33, 0xc0, 0x3c, 0x02, 0x75, 0x2a, 0xdf, 0x5a, 0xff, 0xff, 0xff, 0xff, 
#endif
#if LV_COLOR_DEPTH == 32
  /*Pixel format: Fix 0xFF: 8 bit, Red: 8 bit, Green: 8 bit, Blue: 8 bit*/
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xd1, 0xe7, 0xda, 0xff, 0x4e, 0xa3, 0x70, 0xff, 0x0d, 0x7e, 0x39, 0xff, 0x03, 0x78, 0x30, 0xff, 0x0d, 0x7e, 0x39, 0xff, 0x53, 0xa5, 0x73, 0xff, 0xd1, 0xe7, 0xda, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0x95, 0xc9, 0xaa, 0xff, 0x03, 0x78, 0x30, 0xff, 0x1d, 0x97, 0x53, 0xff, 0x15, 0xa4, 0x5b, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x15, 0xa4, 0x5b, 0xff, 0x15, 0x94, 0x4e, 0xff, 0x03, 0x78, 0x30, 0xff, 0x9c, 0xcc, 0xaf, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xd1, 0xe7, 0xda, 0xff, 0x03, 0x78, 0x30, 0xff, 0x12, 0x9d, 0x54, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x12, 0x9d, 0x54, 0xff, 0x03, 0x78, 0x30, 0xff, 0xd1, 0xe7, 0xda, 0xff, 
  0x4e, 0xa3, 0x70, 0xff, 0x1d, 0x97, 0x53, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x15, 0x94, 0x4e, 0xff, 0x4b, 0xa2, 0x6e, 0xff, 
  0x0d, 0x7e, 0x39, 0xff, 0x15, 0xa4, 0x5b, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x15, 0xa4, 0x5b, 0xff, 0x0d, 0x7e, 0x39, 0xff, 
  0x03, 0x78, 0x30, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x03, 0x78, 0x30, 0xff, 
  0x0d, 0x7e, 0x39, 0xff, 0x15, 0xa4, 0x5b, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x15, 0xa4, 0x5b, 0xff, 0x0d, 0x7e, 0x39, 0xff, 
  0x53, 0xa5, 0x73, 0xff, 0x15, 0x94, 0x4e, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x0c, 0x91, 0x48, 0xff, 0x4e, 0xa3, 0x70, 0xff, 
  0xd1, 0xe7, 0xda, 0xff, 0x03, 0x78, 0x30, 0xff, 0x12, 0x9d, 0x54, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x12, 0x9d, 0x54, 0xff, 0x03, 0x78, 0x30, 0xff, 0xd0, 0xe6, 0xd9, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0x9c, 0xcc, 0xaf, 0xff, 0x03, 0x78, 0x30, 0xff, 0x15, 0x94, 0x4e, 0xff, 0x15, 0xa4, 0x5b, 0xff, 0x17, 0xa9, 0x60, 0xff, 0x15, 0xa4, 0x5b, 0xff, 0x0c, 0x91, 0x48, 0xff, 0x03, 0x78, 0x30, 0xff, 0xa6, 0xcf, 0xb6, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xd1, 0xe7, 0xda, 0xff, 0x4b, 0xa2, 0x6e, 0xff, 0x0d, 0x7e, 0x39, 0xff, 0x03, 0x78, 0x30, 0xff, 0x0d, 0x7e, 0x39, 0xff, 0x4e, 0xa3, 0x70, 0xff, 0xd0, 0xe6, 0xd9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
#endif
};

const lv_img_dsc_t green_dot = {
  .header.cf = LV_IMG_CF_TRUE_COLOR,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 11,
  .header.h = 11,
  .data_size = 121 * LV_COLOR_SIZE / 8,
  .data = green_dot_map,
};
